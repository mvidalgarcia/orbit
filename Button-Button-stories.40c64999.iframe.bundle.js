"use strict";(globalThis.webpackChunk_kiwicom_orbit_components=globalThis.webpackChunk_kiwicom_orbit_components||[]).push([[8096],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("../../node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/Button/Button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Accessibility:()=>Accessibility,ButtonAsALink:()=>ButtonAsALink,ButtonWithIcons:()=>ButtonWithIcons,CircledButton:()=>CircledButton,Default:()=>Default,DestructiveButtons:()=>DestructiveButtons,FullWidthButtons:()=>FullWidthButtons,MultipleFullWidthButtonsInContainer:()=>MultipleFullWidthButtonsInContainer,Playground:()=>Playground,Rtl:()=>Rtl,SubtleButtons:()=>SubtleButtons,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Button_stories});var esm_extends=__webpack_require__("../../node_modules/@babel/runtime/helpers/esm/extends.js"),react=__webpack_require__("../../node_modules/react/index.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs"),icons=__webpack_require__("./src/icons/index.ts");let TYPE_OPTIONS=function(TYPE_OPTIONS){return TYPE_OPTIONS.PRIMARY="primary",TYPE_OPTIONS.SECONDARY="secondary",TYPE_OPTIONS.CRITICAL="critical",TYPE_OPTIONS.WHITE="white",TYPE_OPTIONS.PRIMARY_SUBTLE="primarySubtle",TYPE_OPTIONS.CRITICAL_SUBTLE="criticalSubtle",TYPE_OPTIONS.BUNDLE_BASIC="bundleBasic",TYPE_OPTIONS.BUNDLE_MEDIUM="bundleMedium",TYPE_OPTIONS.BUNDLE_TOP="bundleTop",TYPE_OPTIONS}({}),SIZE_OPTIONS=function(SIZE_OPTIONS){return SIZE_OPTIONS.SMALL="small",SIZE_OPTIONS.NORMAL="normal",SIZE_OPTIONS.LARGE="large",SIZE_OPTIONS}({});var RenderInRtl=__webpack_require__("./src/utils/rtl/RenderInRtl.tsx"),Stack=__webpack_require__("./src/Stack/index.tsx"),consts=__webpack_require__("./src/common/consts.ts"),Button=__webpack_require__("./src/Button/index.tsx");const getIcon=source=>source in icons?icons[source]:null,Button_stories={title:"Button",component:Button.A,args:{children:"Button",href:"",external:!1,asComponent:"button",disabled:!1,fullWidth:!1,type:TYPE_OPTIONS.PRIMARY,size:SIZE_OPTIONS.NORMAL,width:"auto",circled:!1,loading:!1,submit:!1,iconLeft:"Airplane",iconRight:"ChevronDown",tabIndex:"0",spaceAfter:consts.w.SMALL,rel:"nofollow",contentAlign:"center",contentWidth:"100%"},argTypes:{type:{options:Object.values(TYPE_OPTIONS),control:{type:"select"}},size:{options:Object.values(SIZE_OPTIONS),control:{type:"select"}},iconLeft:{options:Object.keys(icons),control:{type:"select"}},iconRight:{options:Object.keys(icons),control:{type:"select"}},spaceAfter:{options:Object.values(consts.w),control:{type:"select"}},contentAlign:{options:["start","center","end","space-between"],control:{type:"select"}}}},Default={render:({children,iconLeft,iconRight,...args})=>{const IconLeft=getIcon(iconLeft),IconRight=getIcon(iconRight);return react.createElement(Button.A,(0,esm_extends.A)({iconLeft:IconLeft&&react.createElement(IconLeft,null),iconRight:IconRight&&react.createElement(IconRight,null)},args,{onClick:(0,dist.XI)("clicked")}),children)},parameters:{info:"This is the default configuration of this component. Visit Orbit.Kiwi for more detailed guidelines."},args:{children:"Default button",iconLeft:void 0,iconRight:void 0}},MultipleFullWidthButtonsInContainer={render:({iconLeft,iconRight,...args})=>{const IconLeft=getIcon(iconLeft),IconRight=getIcon(iconRight);return react.createElement("div",{style:{width:300,backgroundColor:"lightgray"}},"Your privacy, your choice",react.createElement(Stack.A,{direction:"row"},react.createElement(Button.A,(0,esm_extends.A)({iconLeft:IconLeft&&react.createElement(IconLeft,null),iconRight:IconRight&&react.createElement(IconRight,null)},args,{type:"secondary"}),"Customize"),react.createElement(Button.A,(0,esm_extends.A)({iconLeft:IconLeft&&react.createElement(IconLeft,null),iconRight:IconRight&&react.createElement(IconRight,null)},args,{type:"secondary"}),"Reject all"),react.createElement(Button.A,(0,esm_extends.A)({iconLeft:IconLeft&&react.createElement(IconLeft,null),iconRight:IconRight&&react.createElement(IconRight,null)},args),"Accept")))},parameters:{controls:{exclude:["type "]}},args:{iconLeft:void 0,iconRight:void 0,spaceAfter:consts.w.NONE,fullWidth:!0}},ButtonWithIcons={render:({children,iconLeft,iconRight,...args})=>{const IconLeft=getIcon(iconLeft),IconRight=getIcon(iconRight);return react.createElement(Button.A,(0,esm_extends.A)({onClick:(0,dist.XI)("clicked"),iconLeft:IconLeft&&react.createElement(IconLeft,null),iconRight:IconRight&&react.createElement(IconRight,null)},args),children)},parameters:{info:"Buttons with icon are great when you need to draw more attention to the action. However, it's essential to not over-use these buttons. If everything tries to grab attention, things usually get messy. Visit Orbit.Kiwi for more detailed guidelines."},args:{iconLeft:"PlusCircle",iconRight:"ChevronDown"}},FullWidthButtons={render:({children,iconLeft,iconRight,...args})=>{const IconLeft=getIcon(iconLeft),IconRight=getIcon(iconRight);return react.createElement(Stack.A,{spacing:"300",direction:"column"},react.createElement(Button.A,(0,esm_extends.A)({},args,{onClick:(0,dist.XI)("clicked"),iconLeft:IconLeft&&react.createElement(IconLeft,null),iconRight:IconRight&&react.createElement(IconRight,null)}),children),react.createElement(Button.A,(0,esm_extends.A)({},args,{onClick:(0,dist.XI)("clicked"),iconLeft:IconLeft&&react.createElement(IconLeft,null),iconRight:IconRight&&react.createElement(IconRight,null)}),children))},parameters:{info:"By default, a full width Button renders with the children centered. However, if icons are used, the content will align to the left by default. In such scenario, the centered prop can be used to center everything."},args:{iconLeft:"PlusCircle",iconRight:"ChevronDown",fullWidth:!0}},SubtleButtons={render:({children,iconLeft,iconRight,...args})=>{const IconLeft=getIcon(iconLeft),IconRight=getIcon(iconRight);return react.createElement(Stack.A,{direction:"column"},react.createElement(Button.A,(0,esm_extends.A)({},args,{onClick:(0,dist.XI)("clicked"),type:"primarySubtle",iconLeft:IconLeft&&react.createElement(IconLeft,null),iconRight:IconRight&&react.createElement(IconRight,null)}),children),react.createElement(Button.A,(0,esm_extends.A)({},args,{onClick:(0,dist.XI)("clicked"),type:"criticalSubtle",iconLeft:IconLeft&&react.createElement(IconLeft,null),iconRight:IconRight&&react.createElement(IconRight,null)}),children))},parameters:{info:"We use status buttons exclusively in Alert messages when we need to show supporting action connected to the displayed message. We only use the small size of buttons. Visit Orbit.Kiwi for more detailed guidelines.",controls:{exclude:["type"]}},args:{iconLeft:"CloseCircle",size:SIZE_OPTIONS.SMALL}},CircledButton={render:({iconLeft,...args})=>{const IconLeft=getIcon(iconLeft);return react.createElement(Button.A,(0,esm_extends.A)({},args,{onClick:(0,dist.XI)("clicked"),iconLeft:IconLeft&&react.createElement(IconLeft,null),title:"Button"}))},parameters:{info:"Button can be also rendered in circled shape, but only when it does have iconLeft and not have children. Use title prop to ensure accessibility.",controls:{exclude:["iconRight","children"]}},args:{iconRight:void 0,children:void 0,circled:!0}},DestructiveButtons={render:({children,iconLeft,iconRight,...args})=>{const IconLeft=getIcon(iconLeft),IconRight=getIcon(iconRight);return react.createElement(Button.A,(0,esm_extends.A)({},args,{onClick:(0,dist.XI)("clicked"),iconLeft:IconLeft&&react.createElement(IconLeft,null),iconRight:IconRight&&react.createElement(IconRight,null)}),children)},parameters:{info:"Destructive buttons are a specific version of critical status buttons, paired together with 'Remove' icon. We use them when we need to inform our users about possible dangerous actions (canceling a booking, removing an item, etc.). Visit Orbit.Kiwi for more detailed guidelines."},args:{children:"Destructive button",size:SIZE_OPTIONS.NORMAL,iconLeft:"Airplane",iconRight:void 0,type:TYPE_OPTIONS.CRITICAL}},ButtonAsALink={render:({children,iconLeft,iconRight,...args})=>{const IconLeft=getIcon(iconLeft),IconRight=getIcon(iconRight);return react.createElement(Button.A,(0,esm_extends.A)({},args,{onClick:(0,dist.XI)("clicked"),iconLeft:IconLeft&&react.createElement(IconLeft,null),iconRight:IconRight&&react.createElement(IconRight,null)}),children)},parameters:{info:"If you need to, you can pass some href to this component and it will automatically render into anchor."},args:{children:"I am a link",href:"https://kiwi.com",iconRight:void 0}},Playground={render:({children,iconLeft,iconRight,...args})=>{const IconLeft=getIcon(iconLeft),IconRight=getIcon(iconRight);return react.createElement(Button.A,(0,esm_extends.A)({},args,{onClick:(0,dist.XI)("clicked"),iconLeft:IconLeft&&react.createElement(IconLeft,null),iconRight:IconRight&&react.createElement(IconRight,null)}),children)},parameters:{info:"Some description about this type of component."}},Accessibility={render:({children,iconLeft,iconRight,...args})=>{const IconLeft=getIcon(iconLeft),IconRight=getIcon(iconRight);return react.createElement(Button.A,(0,esm_extends.A)({},args,{onClick:(0,dist.XI)("clicked"),iconLeft:IconLeft&&react.createElement(IconLeft,null),iconRight:IconRight&&react.createElement(IconRight,null)}),children)},parameters:{info:"This is a preview of component accessibility props"},args:{title:"Additional information for accessibility",ariaLabelledby:"labelledby-id",ariaExpanded:!1,ariaCurrent:"false",ariaControls:"element-id"}},Rtl={render:({children,iconLeft,iconRight,...args})=>{const IconLeft=getIcon(iconLeft),IconRight=getIcon(iconRight);return react.createElement(RenderInRtl.A,null,react.createElement(Button.A,(0,esm_extends.A)({},args,{type:"primary",iconLeft:IconLeft&&react.createElement(IconLeft,null),iconRight:IconRight&&react.createElement(IconRight,null)}),children))},parameters:{info:"This is a preview of this component in RTL setup."}},__namedExportsOrder=["Default","MultipleFullWidthButtonsInContainer","ButtonWithIcons","FullWidthButtons","SubtleButtons","CircledButton","DestructiveButtons","ButtonAsALink","Playground","Accessibility","Rtl"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: ({\n    children,\n    iconLeft,\n    iconRight,\n    ...args\n  }) => {\n    const IconLeft = getIcon(iconLeft as string);\n    const IconRight = getIcon(iconRight as string);\n    return <Button iconLeft={IconLeft && <IconLeft />} iconRight={IconRight && <IconRight />} {...args} onClick={action("clicked")}>\n        {children}\n      </Button>;\n  },\n  parameters: {\n    info: "This is the default configuration of this component. Visit Orbit.Kiwi for more detailed guidelines."\n  },\n  args: {\n    children: "Default button",\n    iconLeft: undefined,\n    iconRight: undefined\n  }\n}',...Default.parameters?.docs?.source}}},MultipleFullWidthButtonsInContainer.parameters={...MultipleFullWidthButtonsInContainer.parameters,docs:{...MultipleFullWidthButtonsInContainer.parameters?.docs,source:{originalSource:'{\n  render: ({\n    iconLeft,\n    iconRight,\n    ...args\n  }) => {\n    const IconLeft = getIcon(iconLeft as string);\n    const IconRight = getIcon(iconRight as string);\n    return <div style={{\n      width: 300,\n      backgroundColor: "lightgray"\n    }}>\n        Your privacy, your choice\n        <Stack direction="row">\n          <Button iconLeft={IconLeft && <IconLeft />} iconRight={IconRight && <IconRight />} {...args} type="secondary">\n            Customize\n          </Button>\n          <Button iconLeft={IconLeft && <IconLeft />} iconRight={IconRight && <IconRight />} {...args} type="secondary">\n            Reject all\n          </Button>\n          <Button iconLeft={IconLeft && <IconLeft />} iconRight={IconRight && <IconRight />} {...args}>\n            Accept\n          </Button>\n        </Stack>\n      </div>;\n  },\n  parameters: {\n    controls: {\n      exclude: ["type "]\n    }\n  },\n  args: {\n    iconLeft: undefined,\n    iconRight: undefined,\n    spaceAfter: SPACINGS_AFTER.NONE,\n    fullWidth: true\n  }\n}',...MultipleFullWidthButtonsInContainer.parameters?.docs?.source}}},ButtonWithIcons.parameters={...ButtonWithIcons.parameters,docs:{...ButtonWithIcons.parameters?.docs,source:{originalSource:'{\n  render: ({\n    children,\n    iconLeft,\n    iconRight,\n    ...args\n  }) => {\n    const IconLeft = getIcon(iconLeft as string);\n    const IconRight = getIcon(iconRight as string);\n    return <Button onClick={action("clicked")} iconLeft={IconLeft && <IconLeft />} iconRight={IconRight && <IconRight />} {...args}>\n        {children}\n      </Button>;\n  },\n  parameters: {\n    info: "Buttons with icon are great when you need to draw more attention to the action. However, it\'s essential to not over-use these buttons. If everything tries to grab attention, things usually get messy. Visit Orbit.Kiwi for more detailed guidelines."\n  },\n  args: {\n    iconLeft: "PlusCircle",\n    iconRight: "ChevronDown"\n  }\n}',...ButtonWithIcons.parameters?.docs?.source}}},FullWidthButtons.parameters={...FullWidthButtons.parameters,docs:{...FullWidthButtons.parameters?.docs,source:{originalSource:'{\n  render: ({\n    children,\n    iconLeft,\n    iconRight,\n    ...args\n  }) => {\n    const IconLeft = getIcon(iconLeft as string);\n    const IconRight = getIcon(iconRight as string);\n    return <Stack spacing="300" direction="column">\n        <Button {...args} onClick={action("clicked")} iconLeft={IconLeft && <IconLeft />} iconRight={IconRight && <IconRight />}>\n          {children}\n        </Button>\n        <Button {...args} onClick={action("clicked")} iconLeft={IconLeft && <IconLeft />} iconRight={IconRight && <IconRight />}>\n          {children}\n        </Button>\n      </Stack>;\n  },\n  parameters: {\n    info: "By default, a full width Button renders with the children centered. However, if icons are used, the content will align to the left by default. In such scenario, the centered prop can be used to center everything."\n  },\n  args: {\n    iconLeft: "PlusCircle",\n    iconRight: "ChevronDown",\n    fullWidth: true\n  }\n}',...FullWidthButtons.parameters?.docs?.source}}},SubtleButtons.parameters={...SubtleButtons.parameters,docs:{...SubtleButtons.parameters?.docs,source:{originalSource:'{\n  render: ({\n    children,\n    iconLeft,\n    iconRight,\n    ...args\n  }) => {\n    const IconLeft = getIcon(iconLeft as string);\n    const IconRight = getIcon(iconRight as string);\n    return <Stack direction="column">\n        <Button {...args} onClick={action("clicked")} type="primarySubtle" iconLeft={IconLeft && <IconLeft />} iconRight={IconRight && <IconRight />}>\n          {children}\n        </Button>\n        <Button {...args} onClick={action("clicked")} type="criticalSubtle" iconLeft={IconLeft && <IconLeft />} iconRight={IconRight && <IconRight />}>\n          {children}\n        </Button>\n      </Stack>;\n  },\n  parameters: {\n    info: "We use status buttons exclusively in Alert messages when we need to show supporting action connected to the displayed message. We only use the small size of buttons. Visit Orbit.Kiwi for more detailed guidelines.",\n    controls: {\n      exclude: ["type"]\n    }\n  },\n  args: {\n    iconLeft: "CloseCircle",\n    size: SIZE_OPTIONS.SMALL\n  }\n}',...SubtleButtons.parameters?.docs?.source}}},CircledButton.parameters={...CircledButton.parameters,docs:{...CircledButton.parameters?.docs,source:{originalSource:'{\n  render: ({\n    iconLeft,\n    ...args\n  }) => {\n    const IconLeft = getIcon(iconLeft as string);\n    return <Button {...args} onClick={action("clicked")} iconLeft={IconLeft && <IconLeft />} title="Button" />;\n  },\n  parameters: {\n    info: "Button can be also rendered in circled shape, but only when it does have iconLeft and not have children. Use title prop to ensure accessibility.",\n    controls: {\n      exclude: ["iconRight", "children"]\n    }\n  },\n  args: {\n    iconRight: undefined,\n    children: undefined,\n    circled: true\n  }\n}',...CircledButton.parameters?.docs?.source}}},DestructiveButtons.parameters={...DestructiveButtons.parameters,docs:{...DestructiveButtons.parameters?.docs,source:{originalSource:'{\n  render: ({\n    children,\n    iconLeft,\n    iconRight,\n    ...args\n  }) => {\n    const IconLeft = getIcon(iconLeft as string);\n    const IconRight = getIcon(iconRight as string);\n    return <Button {...args} onClick={action("clicked")} iconLeft={IconLeft && <IconLeft />} iconRight={IconRight && <IconRight />}>\n        {children}\n      </Button>;\n  },\n  parameters: {\n    info: "Destructive buttons are a specific version of critical status buttons, paired together with \'Remove\' icon. We use them when we need to inform our users about possible dangerous actions (canceling a booking, removing an item, etc.). Visit Orbit.Kiwi for more detailed guidelines."\n  },\n  args: {\n    children: "Destructive button",\n    size: SIZE_OPTIONS.NORMAL,\n    iconLeft: "Airplane",\n    iconRight: undefined,\n    type: TYPE_OPTIONS.CRITICAL\n  }\n}',...DestructiveButtons.parameters?.docs?.source}}},ButtonAsALink.parameters={...ButtonAsALink.parameters,docs:{...ButtonAsALink.parameters?.docs,source:{originalSource:'{\n  render: ({\n    children,\n    iconLeft,\n    iconRight,\n    ...args\n  }) => {\n    const IconLeft = getIcon(iconLeft as string);\n    const IconRight = getIcon(iconRight as string);\n    return <Button {...args} onClick={action("clicked")} iconLeft={IconLeft && <IconLeft />} iconRight={IconRight && <IconRight />}>\n        {children}\n      </Button>;\n  },\n  parameters: {\n    info: "If you need to, you can pass some href to this component and it will automatically render into anchor."\n  },\n  args: {\n    children: "I am a link",\n    href: "https://kiwi.com",\n    iconRight: undefined\n  }\n}',...ButtonAsALink.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'{\n  render: ({\n    children,\n    iconLeft,\n    iconRight,\n    ...args\n  }) => {\n    const IconLeft = getIcon(iconLeft as string);\n    const IconRight = getIcon(iconRight as string);\n    return <Button {...args} onClick={action("clicked")} iconLeft={IconLeft && <IconLeft />} iconRight={IconRight && <IconRight />}>\n        {children}\n      </Button>;\n  },\n  parameters: {\n    info: "Some description about this type of component."\n  }\n}',...Playground.parameters?.docs?.source}}},Accessibility.parameters={...Accessibility.parameters,docs:{...Accessibility.parameters?.docs,source:{originalSource:'{\n  render: ({\n    children,\n    iconLeft,\n    iconRight,\n    ...args\n  }) => {\n    const IconLeft = getIcon(iconLeft as string);\n    const IconRight = getIcon(iconRight as string);\n    return <Button {...args} onClick={action("clicked")} iconLeft={IconLeft && <IconLeft />} iconRight={IconRight && <IconRight />}>\n        {children}\n      </Button>;\n  },\n  parameters: {\n    info: "This is a preview of component accessibility props"\n  },\n  args: {\n    title: "Additional information for accessibility",\n    ariaLabelledby: "labelledby-id",\n    ariaExpanded: false,\n    ariaCurrent: "false",\n    ariaControls: "element-id"\n  }\n}',...Accessibility.parameters?.docs?.source}}},Rtl.parameters={...Rtl.parameters,docs:{...Rtl.parameters?.docs,source:{originalSource:'{\n  render: ({\n    children,\n    iconLeft,\n    iconRight,\n    ...args\n  }) => {\n    const IconLeft = getIcon(iconLeft as string);\n    const IconRight = getIcon(iconRight as string);\n    return <RenderInRtl>\n        <Button {...args} type="primary" iconLeft={IconLeft && <IconLeft />} iconRight={IconRight && <IconRight />}>\n          {children}\n        </Button>\n      </RenderInRtl>;\n  },\n  parameters: {\n    info: "This is a preview of this component in RTL setup."\n  }\n}',...Rtl.parameters?.docs?.source}}}},"./src/utils/rtl/RenderInRtl.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_kiwicom_orbit_design_tokens__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../orbit-design-tokens/dist/index.js"),_OrbitProvider__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/OrbitProvider/index.tsx");const RenderInRtl=({children})=>(react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>(document&&document.documentElement.setAttribute("dir","rtl"),()=>{document&&document.documentElement.removeAttribute("dir")})),[]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_OrbitProvider__WEBPACK_IMPORTED_MODULE_2__.A,{theme:{orbit:_kiwicom_orbit_design_tokens__WEBPACK_IMPORTED_MODULE_1__.o3,rtl:!0},useId:react__WEBPACK_IMPORTED_MODULE_0__.useId},children)),__WEBPACK_DEFAULT_EXPORT__=RenderInRtl;RenderInRtl.__docgenInfo={description:"",methods:[],displayName:"RenderInRtl",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}}}}]);