// flow-typed signature: 4ebf52329e619a1b631efc036a5eac38
// flow-typed version: <<STUB>>/ts-node_v^10.9.1/flow_v0.187.1

/**
 * This is an autogenerated libdef stub for:
 *
 *   'ts-node'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'ts-node' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'ts-node/dist-raw/node-internal-constants' {
  declare module.exports: any;
}

declare module 'ts-node/dist-raw/node-internal-errors' {
  declare module.exports: any;
}

declare module 'ts-node/dist-raw/node-internal-modules-cjs-helpers' {
  declare module.exports: any;
}

declare module 'ts-node/dist-raw/node-internal-modules-cjs-loader' {
  declare module.exports: any;
}

declare module 'ts-node/dist-raw/node-internal-modules-esm-get_format' {
  declare module.exports: any;
}

declare module 'ts-node/dist-raw/node-internal-modules-esm-resolve' {
  declare module.exports: any;
}

declare module 'ts-node/dist-raw/node-internal-modules-package_json_reader' {
  declare module.exports: any;
}

declare module 'ts-node/dist-raw/node-internal-repl-await' {
  declare module.exports: any;
}

declare module 'ts-node/dist-raw/node-internalBinding-fs' {
  declare module.exports: any;
}

declare module 'ts-node/dist-raw/node-nativemodule' {
  declare module.exports: any;
}

declare module 'ts-node/dist-raw/node-options' {
  declare module.exports: any;
}

declare module 'ts-node/dist-raw/node-primordials' {
  declare module.exports: any;
}

declare module 'ts-node/dist-raw/runmain-hack' {
  declare module.exports: any;
}

declare module 'ts-node/dist/bin-cwd' {
  declare module.exports: any;
}

declare module 'ts-node/dist/bin-esm' {
  declare module.exports: any;
}

declare module 'ts-node/dist/bin-script-deprecated' {
  declare module.exports: any;
}

declare module 'ts-node/dist/bin-script' {
  declare module.exports: any;
}

declare module 'ts-node/dist/bin-transpile' {
  declare module.exports: any;
}

declare module 'ts-node/dist/bin' {
  declare module.exports: any;
}

declare module 'ts-node/dist/child/argv-payload' {
  declare module.exports: any;
}

declare module 'ts-node/dist/child/child-entrypoint' {
  declare module.exports: any;
}

declare module 'ts-node/dist/child/child-loader' {
  declare module.exports: any;
}

declare module 'ts-node/dist/child/child-require' {
  declare module.exports: any;
}

declare module 'ts-node/dist/child/spawn-child' {
  declare module.exports: any;
}

declare module 'ts-node/dist/cjs-resolve-hooks' {
  declare module.exports: any;
}

declare module 'ts-node/dist/configuration' {
  declare module.exports: any;
}

declare module 'ts-node/dist/esm' {
  declare module.exports: any;
}

declare module 'ts-node/dist/file-extensions' {
  declare module.exports: any;
}

declare module 'ts-node/dist' {
  declare module.exports: any;
}

declare module 'ts-node/dist/module-type-classifier' {
  declare module.exports: any;
}

declare module 'ts-node/dist/node-module-type-classifier' {
  declare module.exports: any;
}

declare module 'ts-node/dist/repl' {
  declare module.exports: any;
}

declare module 'ts-node/dist/resolver-functions' {
  declare module.exports: any;
}

declare module 'ts-node/dist/transpilers/swc' {
  declare module.exports: any;
}

declare module 'ts-node/dist/transpilers/types' {
  declare module.exports: any;
}

declare module 'ts-node/dist/ts-compiler-types' {
  declare module.exports: any;
}

declare module 'ts-node/dist/ts-internals' {
  declare module.exports: any;
}

declare module 'ts-node/dist/ts-transpile-module' {
  declare module.exports: any;
}

declare module 'ts-node/dist/tsconfig-schema' {
  declare module.exports: any;
}

declare module 'ts-node/dist/tsconfigs' {
  declare module.exports: any;
}

declare module 'ts-node/dist/util' {
  declare module.exports: any;
}

declare module 'ts-node/register/files' {
  declare module.exports: any;
}

declare module 'ts-node/register' {
  declare module.exports: any;
}

declare module 'ts-node/register/transpile-only' {
  declare module.exports: any;
}

declare module 'ts-node/register/type-check' {
  declare module.exports: any;
}

declare module 'ts-node/transpilers/swc-experimental' {
  declare module.exports: any;
}

declare module 'ts-node/transpilers/swc' {
  declare module.exports: any;
}

// Filename aliases
declare module 'ts-node/dist-raw/node-internal-constants.js' {
  declare module.exports: $Exports<'ts-node/dist-raw/node-internal-constants'>;
}
declare module 'ts-node/dist-raw/node-internal-errors.js' {
  declare module.exports: $Exports<'ts-node/dist-raw/node-internal-errors'>;
}
declare module 'ts-node/dist-raw/node-internal-modules-cjs-helpers.js' {
  declare module.exports: $Exports<'ts-node/dist-raw/node-internal-modules-cjs-helpers'>;
}
declare module 'ts-node/dist-raw/node-internal-modules-cjs-loader.js' {
  declare module.exports: $Exports<'ts-node/dist-raw/node-internal-modules-cjs-loader'>;
}
declare module 'ts-node/dist-raw/node-internal-modules-esm-get_format.js' {
  declare module.exports: $Exports<'ts-node/dist-raw/node-internal-modules-esm-get_format'>;
}
declare module 'ts-node/dist-raw/node-internal-modules-esm-resolve.js' {
  declare module.exports: $Exports<'ts-node/dist-raw/node-internal-modules-esm-resolve'>;
}
declare module 'ts-node/dist-raw/node-internal-modules-package_json_reader.js' {
  declare module.exports: $Exports<'ts-node/dist-raw/node-internal-modules-package_json_reader'>;
}
declare module 'ts-node/dist-raw/node-internal-repl-await.js' {
  declare module.exports: $Exports<'ts-node/dist-raw/node-internal-repl-await'>;
}
declare module 'ts-node/dist-raw/node-internalBinding-fs.js' {
  declare module.exports: $Exports<'ts-node/dist-raw/node-internalBinding-fs'>;
}
declare module 'ts-node/dist-raw/node-nativemodule.js' {
  declare module.exports: $Exports<'ts-node/dist-raw/node-nativemodule'>;
}
declare module 'ts-node/dist-raw/node-options.js' {
  declare module.exports: $Exports<'ts-node/dist-raw/node-options'>;
}
declare module 'ts-node/dist-raw/node-primordials.js' {
  declare module.exports: $Exports<'ts-node/dist-raw/node-primordials'>;
}
declare module 'ts-node/dist-raw/runmain-hack.js' {
  declare module.exports: $Exports<'ts-node/dist-raw/runmain-hack'>;
}
declare module 'ts-node/dist/bin-cwd.js' {
  declare module.exports: $Exports<'ts-node/dist/bin-cwd'>;
}
declare module 'ts-node/dist/bin-esm.js' {
  declare module.exports: $Exports<'ts-node/dist/bin-esm'>;
}
declare module 'ts-node/dist/bin-script-deprecated.js' {
  declare module.exports: $Exports<'ts-node/dist/bin-script-deprecated'>;
}
declare module 'ts-node/dist/bin-script.js' {
  declare module.exports: $Exports<'ts-node/dist/bin-script'>;
}
declare module 'ts-node/dist/bin-transpile.js' {
  declare module.exports: $Exports<'ts-node/dist/bin-transpile'>;
}
declare module 'ts-node/dist/bin.js' {
  declare module.exports: $Exports<'ts-node/dist/bin'>;
}
declare module 'ts-node/dist/child/argv-payload.js' {
  declare module.exports: $Exports<'ts-node/dist/child/argv-payload'>;
}
declare module 'ts-node/dist/child/child-entrypoint.js' {
  declare module.exports: $Exports<'ts-node/dist/child/child-entrypoint'>;
}
declare module 'ts-node/dist/child/child-loader.js' {
  declare module.exports: $Exports<'ts-node/dist/child/child-loader'>;
}
declare module 'ts-node/dist/child/child-require.js' {
  declare module.exports: $Exports<'ts-node/dist/child/child-require'>;
}
declare module 'ts-node/dist/child/spawn-child.js' {
  declare module.exports: $Exports<'ts-node/dist/child/spawn-child'>;
}
declare module 'ts-node/dist/cjs-resolve-hooks.js' {
  declare module.exports: $Exports<'ts-node/dist/cjs-resolve-hooks'>;
}
declare module 'ts-node/dist/configuration.js' {
  declare module.exports: $Exports<'ts-node/dist/configuration'>;
}
declare module 'ts-node/dist/esm.js' {
  declare module.exports: $Exports<'ts-node/dist/esm'>;
}
declare module 'ts-node/dist/file-extensions.js' {
  declare module.exports: $Exports<'ts-node/dist/file-extensions'>;
}
declare module 'ts-node/dist/index' {
  declare module.exports: $Exports<'ts-node/dist'>;
}
declare module 'ts-node/dist/index.js' {
  declare module.exports: $Exports<'ts-node/dist'>;
}
declare module 'ts-node/dist/module-type-classifier.js' {
  declare module.exports: $Exports<'ts-node/dist/module-type-classifier'>;
}
declare module 'ts-node/dist/node-module-type-classifier.js' {
  declare module.exports: $Exports<'ts-node/dist/node-module-type-classifier'>;
}
declare module 'ts-node/dist/repl.js' {
  declare module.exports: $Exports<'ts-node/dist/repl'>;
}
declare module 'ts-node/dist/resolver-functions.js' {
  declare module.exports: $Exports<'ts-node/dist/resolver-functions'>;
}
declare module 'ts-node/dist/transpilers/swc.js' {
  declare module.exports: $Exports<'ts-node/dist/transpilers/swc'>;
}
declare module 'ts-node/dist/transpilers/types.js' {
  declare module.exports: $Exports<'ts-node/dist/transpilers/types'>;
}
declare module 'ts-node/dist/ts-compiler-types.js' {
  declare module.exports: $Exports<'ts-node/dist/ts-compiler-types'>;
}
declare module 'ts-node/dist/ts-internals.js' {
  declare module.exports: $Exports<'ts-node/dist/ts-internals'>;
}
declare module 'ts-node/dist/ts-transpile-module.js' {
  declare module.exports: $Exports<'ts-node/dist/ts-transpile-module'>;
}
declare module 'ts-node/dist/tsconfig-schema.js' {
  declare module.exports: $Exports<'ts-node/dist/tsconfig-schema'>;
}
declare module 'ts-node/dist/tsconfigs.js' {
  declare module.exports: $Exports<'ts-node/dist/tsconfigs'>;
}
declare module 'ts-node/dist/util.js' {
  declare module.exports: $Exports<'ts-node/dist/util'>;
}
declare module 'ts-node/register/files.js' {
  declare module.exports: $Exports<'ts-node/register/files'>;
}
declare module 'ts-node/register/index' {
  declare module.exports: $Exports<'ts-node/register'>;
}
declare module 'ts-node/register/index.js' {
  declare module.exports: $Exports<'ts-node/register'>;
}
declare module 'ts-node/register/transpile-only.js' {
  declare module.exports: $Exports<'ts-node/register/transpile-only'>;
}
declare module 'ts-node/register/type-check.js' {
  declare module.exports: $Exports<'ts-node/register/type-check'>;
}
declare module 'ts-node/transpilers/swc-experimental.js' {
  declare module.exports: $Exports<'ts-node/transpilers/swc-experimental'>;
}
declare module 'ts-node/transpilers/swc.js' {
  declare module.exports: $Exports<'ts-node/transpilers/swc'>;
}
