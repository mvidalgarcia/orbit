"use strict";(globalThis.webpackChunk_kiwicom_orbit_components=globalThis.webpackChunk_kiwicom_orbit_components||[]).push([[562],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("../../node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/Accordion/Accordion.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AccordionWithCustomActions:()=>AccordionWithCustomActions,AccordionWithDisabledSections:()=>AccordionWithDisabledSections,AccordionWithStickyFooter:()=>AccordionWithStickyFooter,Default:()=>Default,LoadingAccordion:()=>LoadingAccordion,MobileFirstInteraction:()=>MobileFirstInteraction,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Accordion_stories});var react=__webpack_require__("../../node_modules/react/index.js"),dist=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs"),Text=__webpack_require__("./src/Text/index.tsx"),Button=__webpack_require__("./src/Button/index.tsx"),Stack=__webpack_require__("./src/Stack/index.tsx");const accordionDefault={onExpand:()=>{},expanded:!1,loading:!1},context=react.createContext(accordionDefault);context.displayName="AccordionOrbitContext";const{Consumer,Provider}=context;var useRandomId=__webpack_require__("./src/hooks/useRandomId/index.ts"),useBoundingRect=__webpack_require__("./src/hooks/useBoundingRect/index.ts"),Slide=__webpack_require__("./src/utils/Slide/index.tsx"),Loading=__webpack_require__("./src/Loading/index.tsx"),esm_extends=__webpack_require__("../../node_modules/@babel/runtime/helpers/esm/extends.js"),clsx=__webpack_require__("../../node_modules/clsx/dist/clsx.mjs");const AccordionSectionHeader=({children,actions,expanded,expandOnTileClick,onExpand,expandable,dataTest})=>{const isInteractive=expandOnTileClick&&!expanded&&expandable,handleClick=react.useCallback((e=>{e.stopPropagation(),onExpand?.()}),[onExpand]),handleKeyDown=react.useCallback((e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),onExpand?.())}),[onExpand]),handleButtonClick=react.useCallback((e=>{e.stopPropagation(),onExpand?.()}),[onExpand]),content=react.createElement(react.Fragment,null,react.createElement("div",{className:"flex grow items-center"},children),!expanded&&expandable&&react.createElement("div",{className:"ms-600 flex"},actions||react.createElement(Button.A,{onClick:handleButtonClick,type:"secondary"},"Open")));return react.createElement("div",(0,esm_extends.A)({className:(0,clsx.A)("p-600 bg-white-normal flex w-full items-center rounded-[inherit]",expanded?"min-h-[19px]":"min-h-form-box-normal",isInteractive&&"hover:bg-cloud-light cursor-pointer border-0 bg-transparent text-left"),"data-test":dataTest&&`${dataTest}Header`,"aria-expanded":expanded},isInteractive&&{role:"button",onClick:handleClick,onKeyDown:handleKeyDown,tabIndex:0}),content)},SectionHeader=AccordionSectionHeader;AccordionSectionHeader.__docgenInfo={description:"",methods:[],displayName:"AccordionSectionHeader",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},expanded:{required:!0,tsType:{name:"boolean"},description:""},expandable:{required:!0,tsType:{name:"boolean"},description:""},expandOnTileClick:{required:!1,tsType:{name:"boolean"},description:""},onExpand:{required:!1,tsType:{name:"Common.Callback"},description:""},actions:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};const AccordionSectionFooter=({children,dataTest})=>react.createElement("div",{className:"p-600 bg-white-normal shadow-level2 sticky bottom-0 flex rounded-b-[3px]","data-test":dataTest&&`${dataTest}Footer`},children),SectionFooter=AccordionSectionFooter;AccordionSectionFooter.__docgenInfo={description:"",methods:[],displayName:"AccordionSectionFooter",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};const AccordionSectionContent=({children,dataTest})=>react.createElement("div",{className:"px-600 pb-600","data-test":dataTest&&`${dataTest}Content`},children),SectionContent=AccordionSectionContent;AccordionSectionContent.__docgenInfo={description:"",methods:[],displayName:"AccordionSectionContent",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};const AccordionSection=({children,header,footer,actions,dataTest,expandable=!0,expandOnTileClick=!1})=>{const{expanded,onExpand,loading}=react.useContext(context),slideId=(0,useRandomId.Ay)(),isExpanded=expandable&&expanded,[{height},ref]=(0,useBoundingRect.A)({height:isExpanded?null:0});return react.createElement("div",{className:"border-elevation-flat-border-color rounded-100 my-200 bg-elevation-flat relative w-full border border-solid","data-test":dataTest},react.createElement(Loading.A,{loading,type:"boxLoader",dataTest:dataTest&&`${dataTest}Loading`},header&&react.createElement(SectionHeader,{actions,expanded:Boolean(isExpanded),onExpand,expandable,expandOnTileClick,dataTest},header),react.createElement(Slide.A,{maxHeight:height,expanded:isExpanded,id:slideId,ariaLabelledBy:slideId},react.createElement("div",{ref},children&&react.createElement(SectionContent,{dataTest},children),footer&&react.createElement(SectionFooter,{dataTest},footer)))))},Accordion_AccordionSection=AccordionSection;AccordionSection.__docgenInfo={description:"",methods:[],displayName:"AccordionSection",props:{expandable:{defaultValue:{value:"true",computed:!1},required:!1},expandOnTileClick:{defaultValue:{value:"false",computed:!1},required:!1}}};var useMediaQuery=__webpack_require__("./src/hooks/useMediaQuery/index.ts"),tailwind_spaceAfter=__webpack_require__("./src/common/tailwind/spaceAfter.ts");const Accordion=({children,dataTest,id,spaceAfter,expandedSection,loading,onExpand})=>react.createElement("div",{className:(0,clsx.A)("orbit-accordion font-base relative w-full",spaceAfter&&tailwind_spaceAfter.P[spaceAfter]),id,"data-test":dataTest},children?react.Children.map(children,(item=>{if(!item)return null;const{id:innerId}=item.props,isExpanded=expandedSection===innerId;return react.createElement(Provider,{value:{expanded:isExpanded,onExpand:()=>onExpand&&onExpand(innerId),loading}},item)})):null),src_Accordion=Accordion;Accordion.__docgenInfo={description:"",methods:[],displayName:"Accordion"};const Footer=()=>{const{isTablet,isMediumMobile}=(0,useMediaQuery.A)();return react.createElement(Stack.A,{flex:!0,shrink:!0,justify:"between",direction:isMediumMobile?"row":"column"},react.createElement(Button.A,{fullWidth:!isTablet,type:"secondary"},"Back to previous segment"),react.createElement(Button.A,{fullWidth:!isTablet,type:"primarySubtle"},"Continue to next segment"))},Accordion_stories={title:"Accordion",component:src_Accordion,parameters:{controls:{disable:!0}}},Default={render:function Render(){const[expandedSection,setExpandedSection]=react.useState("0X1");return react.createElement(src_Accordion,{expandedSection,onExpand:id=>setExpandedSection(String(id))},react.createElement(Accordion_AccordionSection,{id:"0X0",header:react.createElement(Stack.A,{spacing:"300"},react.createElement(Text.A,{type:"primary"},"This is a header label"),react.createElement(Text.A,{size:"small"},"This is a header label"))},react.createElement(Text.A,{type:"primary"},"This is a content text")),react.createElement(Accordion_AccordionSection,{id:"0X1",header:react.createElement(Stack.A,{spacing:"300"},react.createElement(Text.A,{type:"primary"},"This is a header label"),react.createElement(Text.A,{size:"small"},"This is a header label"))},react.createElement(Text.A,{type:"primary"},"This is a content text")),react.createElement(Accordion_AccordionSection,{id:"0X2",header:react.createElement(Stack.A,{spacing:"300"},react.createElement(Text.A,{type:"primary"},"This is a header label"),react.createElement(Text.A,{size:"small"},"This is a header label"))},react.createElement(Text.A,{type:"primary"},"This is a content text")))}},AccordionWithDisabledSections={render:function Render(){const[expandedSection,setExpandedSection]=react.useState("0X1");return react.createElement(src_Accordion,{expandedSection,onExpand:id=>setExpandedSection(String(id))},react.createElement(Accordion_AccordionSection,{id:"0X0",expandable:!1,header:react.createElement(Stack.A,null,react.createElement(Text.A,{type:"primary"},"This is a header label"),react.createElement(Text.A,{size:"small"},"This is a header label"))},react.createElement(Text.A,{type:"primary"},"This is a content text")),react.createElement(Accordion_AccordionSection,{id:"0X1",header:react.createElement(Stack.A,null,react.createElement(Text.A,{type:"primary"},"This is a header label"),react.createElement(Text.A,{size:"small"},"This is a header label"))},react.createElement(Text.A,{type:"primary"},"This is a content text")),react.createElement(Accordion_AccordionSection,{id:"0X2",expandable:!1,header:react.createElement(Stack.A,null,react.createElement(Text.A,{type:"primary"},"This is a header label"),react.createElement(Text.A,{size:"small"},"This is a header label"))},react.createElement(Text.A,{type:"primary"},"This is a content text")),react.createElement(Accordion_AccordionSection,{id:"0X3",header:react.createElement(Stack.A,null,react.createElement(Text.A,{type:"primary"},"This is a header label"),react.createElement(Text.A,{size:"small"},"This is a header label"))},react.createElement(Text.A,{type:"primary"},"This is a content text")))}},AccordionWithCustomActions={render:function Render(){const[expandedSection,setExpandedSection]=react.useState("0X1");return react.createElement(src_Accordion,{expandedSection,onExpand:id=>setExpandedSection(String(id))},react.createElement(Accordion_AccordionSection,{id:"0X0",header:react.createElement(Stack.A,null,react.createElement(Text.A,{type:"primary"},"This is a header label"),react.createElement(Text.A,{size:"small"},"This is a header label")),actions:react.createElement(Button.A,{onClick:(0,dist.XI)("Open onClick")},"Open")},react.createElement(Text.A,{type:"primary"},"This is a content text")),react.createElement(Accordion_AccordionSection,{id:"0X1",header:react.createElement(Stack.A,null,react.createElement(Text.A,{type:"primary"},"This is a header label"),react.createElement(Text.A,{size:"small"},"This is a header label")),actions:react.createElement(Button.A,null,"Open")},react.createElement(Text.A,{type:"primary"},"This is a content text")),react.createElement(Accordion_AccordionSection,{id:"0X2",header:react.createElement(Stack.A,null,react.createElement(Text.A,{type:"primary"},"This is a header label"),react.createElement(Text.A,{size:"small"},"This is a header label")),actions:react.createElement(Stack.A,{direction:"row"},react.createElement(Button.A,{onClick:(0,dist.XI)("Edit onClick"),type:"secondary"},"Edit"),react.createElement(Button.A,{onClick:(0,dist.XI)("Close onClick")},"Custom close"))},react.createElement(Text.A,{type:"primary"},"This is a content text")))}},AccordionWithStickyFooter={render:function Render(){const[expandedSection,setExpandedSection]=react.useState("0X1");return react.createElement(src_Accordion,{expandedSection,onExpand:id=>setExpandedSection(String(id))},react.createElement(Accordion_AccordionSection,{id:"0X0",header:react.createElement(Stack.A,null,react.createElement(Text.A,{type:"primary"},"This is a header label"),react.createElement(Text.A,{size:"small"},"This is a header label"))},react.createElement(Text.A,{type:"primary"},"This is a content text")),react.createElement(Accordion_AccordionSection,{id:"0X1",header:react.createElement(Stack.A,{spacing:"300"},react.createElement(Text.A,{type:"primary"},"This is a header label"),react.createElement(Text.A,{size:"small"},"This is a header label")),footer:react.createElement(Footer,null)},react.createElement(Text.A,{type:"primary"},"This is a content text"),react.createElement(Text.A,{type:"primary"},"This is a content text"),react.createElement(Text.A,{type:"primary"},"This is a content text"),react.createElement(Text.A,{type:"primary",spaceAfter:"large"},"This is a content text"),react.createElement(Text.A,{type:"primary"},"This is a content text"),react.createElement(Text.A,{type:"primary"},"This is a content text"),react.createElement(Text.A,{type:"primary"},"This is a content text"),react.createElement(Text.A,{type:"primary"},"This is a content text"),react.createElement(Text.A,{type:"primary",spaceAfter:"large"},"This is a content text"),react.createElement(Text.A,{type:"primary"},"This is a content text"),react.createElement(Text.A,{type:"primary"},"This is a content text"),react.createElement(Text.A,{type:"primary"},"This is a content text")),react.createElement(Accordion_AccordionSection,{id:"0X2",header:react.createElement(Stack.A,{spacing:"300"},react.createElement(Text.A,{type:"primary"},"This is a content text"),react.createElement(Text.A,{size:"small"},"This is a content text")),footer:react.createElement(Footer,null)},react.createElement(Text.A,{type:"primary"},"This is a content text"),react.createElement(Text.A,{type:"primary"},"This is a content text"),react.createElement(Text.A,{type:"primary"},"This is a content text"),react.createElement(Text.A,{type:"primary"},"This is a content text")))}},LoadingAccordion={render:()=>react.createElement(src_Accordion,{loading:!0},react.createElement(Accordion_AccordionSection,null,"This is a section content"))},MobileFirstInteraction={render:function Render(){const[expandedSection,setExpandedSection]=react.useState("");return react.createElement(Stack.A,null,react.createElement(Text.A,null,"Traditional button-based expansion:"),react.createElement(src_Accordion,{expandedSection,onExpand:id=>setExpandedSection(String(id))},react.createElement(Accordion_AccordionSection,{id:"traditional",header:react.createElement(Stack.A,{spacing:"300"},react.createElement(Text.A,{type:"primary"},"Click the button to expand"),react.createElement(Text.A,{size:"small"},"Uses traditional button-based expansion"))},react.createElement(Text.A,{type:"primary"},"This section uses the traditional button-based expansion."))),react.createElement(Text.A,{spaceAfter:"large"},"Mobile-first tile click expansion:"),react.createElement(src_Accordion,{expandedSection,onExpand:id=>setExpandedSection(String(id))},react.createElement(Accordion_AccordionSection,{id:"mobile",expandOnTileClick:!0,header:react.createElement(Stack.A,{spacing:"300"},react.createElement(Text.A,{type:"primary"},"Click anywhere on the header to expand"),react.createElement(Text.A,{size:"small"},"Uses mobile-first tile click interaction"))},react.createElement(Text.A,{type:"primary"},"This section uses the mobile-first expandOnTileClick interaction."),react.createElement(Text.A,{type:"primary"},"The entire header area is clickable for better mobile usability."),react.createElement(Text.A,{type:"primary"},"Keyboard users can still use Enter or Space to expand/collapse."))))}},__namedExportsOrder=["Default","AccordionWithDisabledSections","AccordionWithCustomActions","AccordionWithStickyFooter","LoadingAccordion","MobileFirstInteraction"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: function Render() {\n    const [expandedSection, setExpandedSection] = React.useState("0X1");\n    return <Accordion expandedSection={expandedSection} onExpand={id => setExpandedSection(String(id))}>\n        <AccordionSection id="0X0" header={<Stack spacing="300">\n              <Text type="primary">This is a header label</Text>\n              <Text size="small">This is a header label</Text>\n            </Stack>}>\n          <Text type="primary">This is a content text</Text>\n        </AccordionSection>\n        <AccordionSection id="0X1" header={<Stack spacing="300">\n              <Text type="primary">This is a header label</Text>\n              <Text size="small">This is a header label</Text>\n            </Stack>}>\n          <Text type="primary">This is a content text</Text>\n        </AccordionSection>\n        <AccordionSection id="0X2" header={<Stack spacing="300">\n              <Text type="primary">This is a header label</Text>\n              <Text size="small">This is a header label</Text>\n            </Stack>}>\n          <Text type="primary">This is a content text</Text>\n        </AccordionSection>\n      </Accordion>;\n  }\n}',...Default.parameters?.docs?.source}}},AccordionWithDisabledSections.parameters={...AccordionWithDisabledSections.parameters,docs:{...AccordionWithDisabledSections.parameters?.docs,source:{originalSource:'{\n  render: function Render() {\n    const [expandedSection, setExpandedSection] = React.useState("0X1");\n    return <Accordion expandedSection={expandedSection} onExpand={id => setExpandedSection(String(id))}>\n        <AccordionSection id="0X0" expandable={false} header={<Stack>\n              <Text type="primary">This is a header label</Text>\n              <Text size="small">This is a header label</Text>\n            </Stack>}>\n          <Text type="primary">This is a content text</Text>\n        </AccordionSection>\n        <AccordionSection id="0X1" header={<Stack>\n              <Text type="primary">This is a header label</Text>\n              <Text size="small">This is a header label</Text>\n            </Stack>}>\n          <Text type="primary">This is a content text</Text>\n        </AccordionSection>\n        <AccordionSection id="0X2" expandable={false} header={<Stack>\n              <Text type="primary">This is a header label</Text>\n              <Text size="small">This is a header label</Text>\n            </Stack>}>\n          <Text type="primary">This is a content text</Text>\n        </AccordionSection>\n        <AccordionSection id="0X3" header={<Stack>\n              <Text type="primary">This is a header label</Text>\n              <Text size="small">This is a header label</Text>\n            </Stack>}>\n          <Text type="primary">This is a content text</Text>\n        </AccordionSection>\n      </Accordion>;\n  }\n}',...AccordionWithDisabledSections.parameters?.docs?.source}}},AccordionWithCustomActions.parameters={...AccordionWithCustomActions.parameters,docs:{...AccordionWithCustomActions.parameters?.docs,source:{originalSource:'{\n  render: function Render() {\n    const [expandedSection, setExpandedSection] = React.useState("0X1");\n    return <Accordion expandedSection={expandedSection} onExpand={id => setExpandedSection(String(id))}>\n        <AccordionSection id="0X0" header={<Stack>\n              <Text type="primary">This is a header label</Text>\n              <Text size="small">This is a header label</Text>\n            </Stack>} actions={<Button onClick={action("Open onClick")}>Open</Button>}>\n          <Text type="primary">This is a content text</Text>\n        </AccordionSection>\n        <AccordionSection id="0X1" header={<Stack>\n              <Text type="primary">This is a header label</Text>\n              <Text size="small">This is a header label</Text>\n            </Stack>} actions={<Button>Open</Button>}>\n          <Text type="primary">This is a content text</Text>\n        </AccordionSection>\n        <AccordionSection id="0X2" header={<Stack>\n              <Text type="primary">This is a header label</Text>\n              <Text size="small">This is a header label</Text>\n            </Stack>} actions={<Stack direction="row">\n              <Button onClick={action("Edit onClick")} type="secondary">\n                Edit\n              </Button>\n              <Button onClick={action("Close onClick")}>Custom close</Button>\n            </Stack>}>\n          <Text type="primary">This is a content text</Text>\n        </AccordionSection>\n      </Accordion>;\n  }\n}',...AccordionWithCustomActions.parameters?.docs?.source}}},AccordionWithStickyFooter.parameters={...AccordionWithStickyFooter.parameters,docs:{...AccordionWithStickyFooter.parameters?.docs,source:{originalSource:'{\n  render: function Render() {\n    const [expandedSection, setExpandedSection] = React.useState("0X1");\n    return <Accordion expandedSection={expandedSection} onExpand={id => setExpandedSection(String(id))}>\n        <AccordionSection id="0X0" header={<Stack>\n              <Text type="primary">This is a header label</Text>\n              <Text size="small">This is a header label</Text>\n            </Stack>}>\n          <Text type="primary">This is a content text</Text>\n        </AccordionSection>\n        <AccordionSection id="0X1" header={<Stack spacing="300">\n              <Text type="primary">This is a header label</Text>\n              <Text size="small">This is a header label</Text>\n            </Stack>} footer={<Footer />}>\n          <Text type="primary">This is a content text</Text>\n          <Text type="primary">This is a content text</Text>\n          <Text type="primary">This is a content text</Text>\n          <Text type="primary" spaceAfter="large">\n            This is a content text\n          </Text>\n          <Text type="primary">This is a content text</Text>\n          <Text type="primary">This is a content text</Text>\n          <Text type="primary">This is a content text</Text>\n          <Text type="primary">This is a content text</Text>\n          <Text type="primary" spaceAfter="large">\n            This is a content text\n          </Text>\n          <Text type="primary">This is a content text</Text>\n          <Text type="primary">This is a content text</Text>\n          <Text type="primary">This is a content text</Text>\n        </AccordionSection>\n        <AccordionSection id="0X2" header={<Stack spacing="300">\n              <Text type="primary">This is a content text</Text>\n              <Text size="small">This is a content text</Text>\n            </Stack>} footer={<Footer />}>\n          <Text type="primary">This is a content text</Text>\n          <Text type="primary">This is a content text</Text>\n          <Text type="primary">This is a content text</Text>\n          <Text type="primary">This is a content text</Text>\n        </AccordionSection>\n      </Accordion>;\n  }\n}',...AccordionWithStickyFooter.parameters?.docs?.source}}},LoadingAccordion.parameters={...LoadingAccordion.parameters,docs:{...LoadingAccordion.parameters?.docs,source:{originalSource:"{\n  render: () => <Accordion loading>\n      <AccordionSection>This is a section content</AccordionSection>\n    </Accordion>\n}",...LoadingAccordion.parameters?.docs?.source}}},MobileFirstInteraction.parameters={...MobileFirstInteraction.parameters,docs:{...MobileFirstInteraction.parameters?.docs,source:{originalSource:'{\n  render: function Render() {\n    const [expandedSection, setExpandedSection] = React.useState("");\n    return <Stack>\n        <Text>Traditional button-based expansion:</Text>\n        <Accordion expandedSection={expandedSection} onExpand={id => setExpandedSection(String(id))}>\n          <AccordionSection id="traditional" header={<Stack spacing="300">\n                <Text type="primary">Click the button to expand</Text>\n                <Text size="small">Uses traditional button-based expansion</Text>\n              </Stack>}>\n            <Text type="primary">This section uses the traditional button-based expansion.</Text>\n          </AccordionSection>\n        </Accordion>\n\n        <Text spaceAfter="large">Mobile-first tile click expansion:</Text>\n        <Accordion expandedSection={expandedSection} onExpand={id => setExpandedSection(String(id))}>\n          <AccordionSection id="mobile" expandOnTileClick header={<Stack spacing="300">\n                <Text type="primary">Click anywhere on the header to expand</Text>\n                <Text size="small">Uses mobile-first tile click interaction</Text>\n              </Stack>}>\n            <Text type="primary">\n              This section uses the mobile-first expandOnTileClick interaction.\n            </Text>\n            <Text type="primary">\n              The entire header area is clickable for better mobile usability.\n            </Text>\n            <Text type="primary">\n              Keyboard users can still use Enter or Space to expand/collapse.\n            </Text>\n          </AccordionSection>\n        </Accordion>\n      </Stack>;\n  }\n}',...MobileFirstInteraction.parameters?.docs?.source}}}}}]);